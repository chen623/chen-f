<?xml version="1.0" encoding="UTF-8"?>
<configuration status="WARN" monitorInterval="300">

    <properties>
        <!-- 配置日志文件输出目录 -->
        <property name="log_home">/logs/chen</property>
        <property name="style_location_pattern">
            %date{yyyy-MM-dd HH:mm:ss} %highlight{%-5level}{ERROR=Red} %style{%-5pid}{Magenta} -- [%15.15thread] %style{%-70.70location}{Cyan} : %encode{%message}%n%xThrowable
        </property>
        <property name="style_logger_pattern">
            %date{yyyy-MM-dd HH:mm:ss} %highlight{%-5level}{ERROR=Red} %style{%-5pid}{Magenta} -- [%15.15thread] %style{%-39.39logger{1.}}{Cyan} : %message%n%xThrowable
        </property>
        <property name="location_pattern">
            %date{yyyy-MM-dd HH:mm:ss}%-5level %-5pid -- [%15.15thread] %-50.50location : %encode{%message}%n%xThrowable
        </property>
        <property name="logger_pattern">
            %date{yyyy-MM-dd HH:mm:ss} %-5level %-5pid -- [%15.15thread] %-39.39logger{1.} : %encode{%message}%n%xThrowable
        </property>
    </properties>

    <appenders>
        <!--  输出控制台的配置 -->
        <Console name="console" target="SYSTEM_OUT">
            <!--  控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <ThresholdFilter level="ALL" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--  输出日志的格式 -->
            <!--<PatternLayout disableAnsi="false" pattern="${style_location_pattern}"/>-->
            <PatternLayout disableAnsi="false" pattern="${style_logger_pattern}"/>
        </Console>

        <!--配置自定义日志，按天输出-->
        <RollingFile name="root-file" fileName="${log_home}/root/root.log"
                     filePattern="${log_home}/root-%d{yyyy-MM-dd-HH}-%i.log"
                     append="false">
            <PatternLayout pattern="${logger_pattern}"/>
            <Policies>
                <!--设置每天打包日志一次-->
                <!--单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟。-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志大小达到一定大小后打包生成压缩文件-->
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
        </RollingFile>

        <!-- 每天的error日志  -->
        <RollingFile name="error-file" fileName="${log_home}/error/error.log"
                     filePattern="${log_home}/error/error-%d{yyyy-MM-dd-HH}-%i.log"
                     append="false">
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${location_pattern}"/>
            <Policies>
                <!--设置每天打包日志一次-->
                <!--单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟。-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志大小达到一定大小后打包生成压缩文件-->
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
        </RollingFile>

        <!--druid的日志记录追加器-->
        <RollingFile name="druid-file" fileName="${log_home}/druid/druid-sql.log"
                     filePattern="${log_home}/druid/druid-sql-%d{yyyy-MM-dd-HH}-%i.log"
                     append="false">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss}] %-5level %L %M - %msg%xEx%n"/>
            <Policies>
                <!--设置每天打包日志一次-->
                <!--单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟。-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志大小达到一定大小后打包生成压缩文件-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile>

        <!--name	            String	    Appender的名字-->
        <!--from	            String	    发件人的电子邮件地址。-->
        <!--replyTo	            String	    以逗号分隔的回复电子邮件地址列表。-->
        <!--to	                String	    以逗号分隔的收件人电子邮件地址列表-->
        <!--cc	                String	    以逗号分隔的CC电子邮件地址列表。-->
        <!--bcc	                String	    以逗号分隔的密件抄送电子邮件地址列表。-->
        <!--subject	            String	    邮件主题。-->
        <!--bufferSize	        integer	    要缓冲的日志事件的最大数量，以便包含在消息中。默认为512。-->
        <!--layout	            Layout	    用于格式化LogEvent的布局。如果没有提供布局，将使用HTML布局。-->
        <!--filter	            Filter	    一个筛选器，用于确定事件是否应该由此Appender处理。使用复合过滤器可以使用多个过滤器。-->
        <!--smtpDebug	        boolean	    当设置为true时，启用STDOUT上的会话调试。默认值为false。-->
        <!--smtpHost	        String	    要发送到的SMTP主机名。此参数是必需的-->
        <!--smtpPassword	    String	    根据SMTP服务器进行身份验证所需的密码。-->
        <!--smtpPort	        integer	    要发送到的SMTP端口。-->
        <!--smtpProtocol	    String	    SMTP传输协议(例如“smtps”，默认为“SMTP”)。-->
        <!--smtpUsername	    String	    根据SMTP服务器进行身份验证所需的用户名。-->
        <!--ignoreExceptions	boolean	    默认值为true，这将导致在添加事件时遇到异常，这些事件将被内部记录，然后被忽略。当设置为false异常时，将传播给调用者。在用FailoverAppender包装这个Appender时，必须将其设置为false。-->
        <SMTP name="mail" subject="Error Log" to="23213424@qq.com" from="23213424@qq.com" replyTo="23213424@qq.com"
              smtpProtocol="smtp" smtpHost="smtp.qq.com" smtpPort="587" bufferSize="50" smtpDebug="false"
              smtpPassword="qmadxwlothttwwhd" smtpUsername="23213424@qq.com">
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
        </SMTP>
    </appenders>

    <loggers>
        <!--过滤掉框架的日志-->
        <logger name="org.springframework" level="WARN" additivity="true"/>
        <logger name="org.mybatis" level="WARN" additivity="true"/>
        <logger name="org.quartz" level="WARN" additivity="true"/>
        <logger name="io.lettuce" level="WARN" additivity="true"/>

        <root level="DEBUG">
            <appender-ref ref="console" level="DEBUG"/>
            <appender-ref ref="root-file" level="DEBUG"/>
            <appender-ref ref="error-file" level="ERROR"/>
            <appender-ref ref="mail" level="ERROR"/>
        </root>
        <!--记录druid-sql的记录-->
        <logger name="druid.sql.Statement" level="DEBUG" additivity="false">
            <appender-ref ref="druid-file"/>
        </logger>

        <!--<logger name="com.chen" level="DEBUG" additivity="false">-->
            <!--<appender-ref ref="console"/>-->
            <!--<appender-ref ref="root-file"/>-->
            <!--<appender-ref ref="error-file"/>-->
            <!--<appender-ref ref="mail" level="ERROR"/>-->
        <!--</logger>-->

    </loggers>
</configuration>