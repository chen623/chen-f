server:
  port: 8080
  http2:
    enabled: true
  servlet:
    session:
      timeout: 30m

  error:
    path: /error
    includeException: true
    includeStacktrace: ALWAYS

logging:
  config: classpath:log4j2.xml

spring:
  main:
    banner-mode: console
  #    allow-bean-definition-overriding: true

  devtools:
    restart:
      enabled: true

  webflux:
    date-format: yyyyMMddhhmmss

  mvc:
    date-format: yyyyMMddhhmmss
    #抛出404异常,默认不抛出404异常,会转发到/error
    throw-exception-if-no-handler-found: false
    locale: zh_CN
  resources:
    #是否使用默认资源映射
    add-mappings: true
    
  messages:
    basename: org/springframework/security/messages,i18n/messages
    
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    joda-date-time-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false


  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: 123456
    timeout: 2m
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -2s
        # 连接池中的最小空闲连接
        min-idle: 0

  session:
    store-type: redis
    timeout: 60m

  cache:
    type: redis
    redis:
      time-to-live: 24h
      cache-null-values: true
      key-prefix: cache

  quartz:
    scheduler-name: quartz
    auto-startup: true
    startup-delay: 0s
    wait-for-jobs-to-complete-on-shutdown: true
    overwrite-existing-jobs: true
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    properties:
      org.quartz.scheduler.instanceName: quartz
      #集群中每个实例都要唯一
      org.quartz.scheduler.instanceId: AUTO
      #是否调过版本更新检查
      org.quartz.scheduler.skipUpdateCheck: true
      org.quartz.scheduler.jobFactory.class: org.springframework.scheduling.quartz.SpringBeanJobFactory
      #线程
      org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
      org.quartz.threadPool.threadCount: 20
      org.quartz.threadPool.threadPriority: 5
      org.quartz.scheduler.threadName: quartz
      org.quartz.threadPool.threadNamePrefix: quartz
      #线程继承初始化线程的上下文类加载器
      org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true
      #Cluster开启集群
      org.quartz.jobStore.isClustered: true
      org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
      #数据库方言
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
      org.quartz.jobStore.tablePrefix: QRTZ_
      #调度实例失效的检查时间间隔
      org.quartz.jobStore.clusterCheckinInterval: 200000
      org.quartz.jobStore.dontSetAutoCommitFalse: false
      org.quartz.jobStore.selectWithLockSQL: SELECT * FROM {0}LOCKS WHERE LOCK_NAME = ? FOR UPDATE
      org.quartz.jobStore.txIsolationLevelSerializable: false
      org.quartz.jobStore.acquireTriggersWithinLock: false
      org.quartz.scheduler.batchTriggerAcquisitionMaxCount: 50

  shardingsphere:
    enabled: true
    datasource:
      names: master
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/chen?characterEncoding=utf8&useSSL=false
        username: root
        password: 123456
        initialSize: 5
        maxActive: 10
        minIdle: 3
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 50
        connectionPropertise:
        #这么配置是默认的过滤器
        #filters: stat,wall,slf4j,config,

    sharding:
      default-data-source-name: master

    props:
      sql:
        show: true
