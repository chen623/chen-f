chen.datasource.dynamic.enable=true
chen.datasource.dynamic.primary=master
chen.datasource.dynamic.order=-2147483648
chen.datasource.dynamic.p6spy=true
chen.datasource.dynamic.datasource.master_1.driver-class-name=com.mysql.cj.jdbc.Driver
chen.datasource.dynamic.datasource.master_1.url=jdbc:mysql://127.0.0.1:3306/chen?characterEncoding=utf8&useSSL=false
chen.datasource.dynamic.datasource.master_1.username=root
chen.datasource.dynamic.datasource.master_1.password=123456
chen.datasource.dynamic.datasource.master_1.initialSize=5
chen.datasource.dynamic.datasource.master_1.maxActive=10
chen.datasource.dynamic.datasource.master_1.minIdle=3
chen.datasource.dynamic.datasource.master_1.maxWait=60000
chen.datasource.dynamic.datasource.master_1.timeBetweenEvictionRunsMillis=60000
chen.datasource.dynamic.datasource.master_1.minEvictableIdleTimeMillis=300000
chen.datasource.dynamic.datasource.master_1.validationQuery=SELECT 1 FROM DUAL
chen.datasource.dynamic.datasource.master_1.testWhileIdle=true
chen.datasource.dynamic.datasource.master_1.testOnBorrow=false
chen.datasource.dynamic.datasource.master_1.testOnReturn=false
chen.datasource.dynamic.datasource.master_1.poolPreparedStatements=true
chen.datasource.dynamic.datasource.master_1.maxPoolPreparedStatementPerConnectionSize=50
chen.datasource.dynamic.datasource.master_1.connectionPropertise=
#不要这么配置
#chen.datasource.dynamic.datasource.master_1.filters=stat,wall,slf4j,config,
############################################################################################################################################################################
#connectionPropertise配置
spring.datasource.druid.filter.config.enabled=true
############################################################################################################################################################################
#编码配置
#如: connectionPropertise配置 clientEncoding=UTF-8;serverEncoding=ISO-8859-1
spring.datasource.druid.filter.encoding.enabled=false
############################################################################################################################################################################
#日志配置
spring.datasource.druid.filter.slf4j.enabled=true
#所有DataSource相关的日志
spring.datasource.druid.filter.slf4j.data-source-log-enabled=false
#所有连接相关的日志
spring.datasource.druid.filter.slf4j.connection-log-enabled=false
#所有连接上发生异常的日志
spring.datasource.druid.filter.slf4j.connection-log-error-enabled=true
#所有Statement相关的日志
spring.datasource.druid.filter.slf4j.statement-log-enabled=false
#所有Statement发生异常的日志
spring.datasource.druid.filter.slf4j.statement-log-error-enabled=true
#输出可执行的SQL
spring.datasource.druid.filter.slf4j.connection-connect-before-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-connect-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-commit-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-rollback-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-prepare-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-prepare-call-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-query-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-update-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-batch-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-executable-sql-log-enable=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-parameter-clear-log-enable=false
spring.datasource.druid.filter.slf4j.statement-parameter-set-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-next-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-log-error-enabled=false
#spring.datasource.druid.filter.slf4j.statement-sql-format-option=true
spring.datasource.druid.filter.slf4j.statement-sql-pretty-format=false
############################################################################################################################################################################
#针对sql做的限制,如:防御SQL注入攻击
spring.datasource.druid.filter.wall.enabled=true
############################################################################################################################################################################
#StatFilter配置
spring.datasource.druid.filter.stat.enabled=true
#SQL慢的标准
spring.datasource.druid.filter.stat.slowSqlMillis=10000
spring.datasource.druid.filter.stat.logSlowSql=true
spring.datasource.druid.filter.stat.mergeSql=true
############################################################################################################################################################################
#spring监控
#spring.datasource.druid.aopPatterns=com.*.mapper.*
#是否启用StatViewServlet默认值true
spring.datasource.druid.statViewServlet.enabled=true
#根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html
spring.datasource.druid.statViewServlet.urlPattern=/druid/*
#由于匹配规则不支持IPV6，配置了allow或者deny之后，会导致IPV6无法访问。
#白名单ip
spring.datasource.druid.statViewServlet.allow=
#黑名单ip
spring.datasource.druid.statViewServlet.deny=
spring.datasource.druid.statViewServlet.loginUsername=chen
spring.datasource.druid.statViewServlet.loginPassword=chen
#是否能够重置数据.
spring.datasource.druid.statViewServlet.resetEnable=false
#是否启用StatFilter默认值true
spring.datasource.druid.webStatFilter.enabled=true
spring.datasource.druid.webStatFilter.urlPattern=/*
spring.datasource.druid.webStatFilter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.webStatFilter.sessionStatEnable=true
spring.datasource.druid.webStatFilter.sessionStatMaxCount=100
spring.datasource.druid.webStatFilter.principalSessionName=userName
spring.datasource.druid.webStatFilter.principalCookieName=userName
#配置profileEnable能够监控单个url调用的sql列表。
spring.datasource.druid.webStatFilter.profileEnable=true
